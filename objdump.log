
cycles_and_flush:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006e0 <_init>:
 6e0:	nop
 6e4:	stp	x29, x30, [sp, #-16]!
 6e8:	mov	x29, sp
 6ec:	bl	7b4 <call_weak_fn>
 6f0:	ldp	x29, x30, [sp], #16
 6f4:	ret

Disassembly of section .plt:

0000000000000700 <.plt>:
 700:	stp	x16, x30, [sp, #-16]!
 704:	adrp	x16, 11000 <__FRAME_END__+0x1025c>
 708:	ldr	x17, [x16, #4088]
 70c:	add	x16, x16, #0xff8
 710:	br	x17
 714:	nop
 718:	nop
 71c:	nop

0000000000000720 <__libc_start_main@plt>:
 720:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 724:	ldr	x17, [x16]
 728:	add	x16, x16, #0x0
 72c:	br	x17

0000000000000730 <__stack_chk_fail@plt>:
 730:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 734:	ldr	x17, [x16, #8]
 738:	add	x16, x16, #0x8
 73c:	br	x17

0000000000000740 <__gmon_start__@plt>:
 740:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 744:	ldr	x17, [x16, #16]
 748:	add	x16, x16, #0x10
 74c:	br	x17

0000000000000750 <abort@plt>:
 750:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 754:	ldr	x17, [x16, #24]
 758:	add	x16, x16, #0x18
 75c:	br	x17

0000000000000760 <printf@plt>:
 760:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 764:	ldr	x17, [x16, #32]
 768:	add	x16, x16, #0x20
 76c:	br	x17

0000000000000770 <putchar@plt>:
 770:	adrp	x16, 12000 <__libc_start_main@GLIBC_2.34>
 774:	ldr	x17, [x16, #40]
 778:	add	x16, x16, #0x28
 77c:	br	x17

Disassembly of section .text:

0000000000000780 <_start>:
 780:	nop
 784:	mov	x29, #0x0                   	// #0
 788:	mov	x30, #0x0                   	// #0
 78c:	mov	x5, x0
 790:	ldr	x1, [sp]
 794:	add	x2, sp, #0x8
 798:	mov	x6, sp
 79c:	adrp	x0, 11000 <__FRAME_END__+0x1025c>
 7a0:	ldr	x0, [x0, #4056]
 7a4:	mov	x3, #0x0                   	// #0
 7a8:	mov	x4, #0x0                   	// #0
 7ac:	bl	720 <__libc_start_main@plt>
 7b0:	bl	750 <abort@plt>

00000000000007b4 <call_weak_fn>:
 7b4:	adrp	x0, 11000 <__FRAME_END__+0x1025c>
 7b8:	ldr	x0, [x0, #4040]
 7bc:	cbz	x0, 7c4 <call_weak_fn+0x10>
 7c0:	b	740 <__gmon_start__@plt>
 7c4:	ret
 7c8:	nop
 7cc:	nop

00000000000007d0 <deregister_tm_clones>:
 7d0:	adrp	x0, 12000 <__libc_start_main@GLIBC_2.34>
 7d4:	add	x0, x0, #0x40
 7d8:	adrp	x1, 12000 <__libc_start_main@GLIBC_2.34>
 7dc:	add	x1, x1, #0x40
 7e0:	cmp	x1, x0
 7e4:	b.eq	7fc <deregister_tm_clones+0x2c>  // b.none
 7e8:	adrp	x1, 11000 <__FRAME_END__+0x1025c>
 7ec:	ldr	x1, [x1, #4024]
 7f0:	cbz	x1, 7fc <deregister_tm_clones+0x2c>
 7f4:	mov	x16, x1
 7f8:	br	x16
 7fc:	ret

0000000000000800 <register_tm_clones>:
 800:	adrp	x0, 12000 <__libc_start_main@GLIBC_2.34>
 804:	add	x0, x0, #0x40
 808:	adrp	x1, 12000 <__libc_start_main@GLIBC_2.34>
 80c:	add	x1, x1, #0x40
 810:	sub	x1, x1, x0
 814:	lsr	x2, x1, #63
 818:	add	x1, x2, x1, asr #3
 81c:	asr	x1, x1, #1
 820:	cbz	x1, 838 <register_tm_clones+0x38>
 824:	adrp	x2, 11000 <__FRAME_END__+0x1025c>
 828:	ldr	x2, [x2, #4064]
 82c:	cbz	x2, 838 <register_tm_clones+0x38>
 830:	mov	x16, x2
 834:	br	x16
 838:	ret
 83c:	nop

0000000000000840 <__do_global_dtors_aux>:
 840:	stp	x29, x30, [sp, #-32]!
 844:	mov	x29, sp
 848:	str	x19, [sp, #16]
 84c:	adrp	x19, 12000 <__libc_start_main@GLIBC_2.34>
 850:	ldrb	w0, [x19, #64]
 854:	cbnz	w0, 87c <__do_global_dtors_aux+0x3c>
 858:	adrp	x1, 11000 <__FRAME_END__+0x1025c>
 85c:	ldr	x1, [x1, #4032]
 860:	cbz	x1, 870 <__do_global_dtors_aux+0x30>
 864:	adrp	x0, 12000 <__libc_start_main@GLIBC_2.34>
 868:	ldr	x0, [x0, #56]
 86c:	blr	x1
 870:	bl	7d0 <deregister_tm_clones>
 874:	mov	w0, #0x1                   	// #1
 878:	strb	w0, [x19, #64]
 87c:	ldr	x19, [sp, #16]
 880:	ldp	x29, x30, [sp], #32
 884:	ret
 888:	nop
 88c:	nop

0000000000000890 <frame_dummy>:
 890:	b	800 <register_tm_clones>

0000000000000894 <main>:
 894:	stp	x29, x30, [sp, #-96]!
 898:	stp	x28, x27, [sp, #16]
 89c:	stp	x26, x25, [sp, #32]
 8a0:	stp	x24, x23, [sp, #48]
 8a4:	stp	x22, x21, [sp, #64]
 8a8:	stp	x20, x19, [sp, #80]
 8ac:	mov	x29, sp
 8b0:	sub	sp, sp, #0x330
 8b4:	adrp	x9, 11000 <__FRAME_END__+0x1025c>
 8b8:	mov	x19, sp
 8bc:	mov	x21, sp
 8c0:	mov	x8, xzr
 8c4:	mov	w12, #0x41                  	// #65
 8c8:	mov	w11, #0x100                 	// #256
 8cc:	ldr	x9, [x9, #4048]
 8d0:	ldr	x9, [x9]
 8d4:	stur	x9, [x29, #-8]
 8d8:	mrs	x9, s3_1_c15_c0_0
 8dc:	orr	x10, x9, #0x1
 8e0:	add	x9, x19, #0x8
 8e4:	msr	s3_1_c15_c0_0, x10
 8e8:	isb
 8ec:	msr	s3_1_c15_c1_0, x11
 8f0:	isb
 8f4:	strb	w12, [x19]
 8f8:	ldrb	w10, [x19]
 8fc:	isb
 900:	mrs	x10, s3_2_c15_c0_0
 904:	isb
 908:	ldrb	w11, [x19]
 90c:	dsb	ish
 910:	isb
 914:	mrs	x11, s3_2_c15_c0_0
 918:	isb
 91c:	sub	x10, x11, x10
 920:	str	x10, [x9, x8]
 924:	add	x8, x8, #0x8
 928:	cmp	x8, #0x320
 92c:	b.ne	8f8 <main+0x64>  // b.any
 930:	sub	x22, sp, #0x320
 934:	mov	sp, x22
 938:	mov	x8, xzr
 93c:	add	x9, x19, #0x0
 940:	ldrb	w10, [x19]
 944:	dc	civac, x9
 948:	isb
 94c:	dsb	ish
 950:	isb
 954:	mrs	x10, s3_2_c15_c0_0
 958:	isb
 95c:	ldrb	w11, [x19]
 960:	dsb	ish
 964:	isb
 968:	mrs	x11, s3_2_c15_c0_0
 96c:	isb
 970:	sub	x10, x11, x10
 974:	str	x10, [x22, x8]
 978:	add	x8, x8, #0x8
 97c:	cmp	x8, #0x320
 980:	b.ne	940 <main+0xac>  // b.any
 984:	sub	x23, sp, #0x320
 988:	mov	sp, x23
 98c:	mov	x8, xzr
 990:	add	x9, x19, #0x0
 994:	dc	civac, x9
 998:	isb
 99c:	dsb	ish
 9a0:	ldnp	x10, x11, [x9]
 9a4:	isb
 9a8:	mrs	x10, s3_2_c15_c0_0
 9ac:	isb
 9b0:	ldrb	w11, [x19]
 9b4:	dsb	ish
 9b8:	isb
 9bc:	mrs	x11, s3_2_c15_c0_0
 9c0:	isb
 9c4:	sub	x10, x11, x10
 9c8:	str	x10, [x23, x8]
 9cc:	add	x8, x8, #0x8
 9d0:	cmp	x8, #0x320
 9d4:	b.ne	994 <main+0x100>  // b.any
 9d8:	sub	x24, sp, #0x320
 9dc:	mov	sp, x24
 9e0:	mov	x8, xzr
 9e4:	mov	w9, #0x41                  	// #65
 9e8:	add	x10, x19, #0x0
 9ec:	add	x11, x19, #0x4
 9f0:	mov	x12, xzr
 9f4:	strb	w9, [x19, #4]
 9f8:	dc	civac, x10
 9fc:	isb
 a00:	dsb	ish
 a04:	dc	civac, x11
 a08:	isb
 a0c:	dsb	ish
 a10:	isb
 a14:	mrs	x13, s3_2_c15_c0_0
 a18:	isb
 a1c:	ldrb	w14, [x19]
 a20:	mul	x14, x14, x12
 a24:	ldrb	w12, [x14, x11]
 a28:	sub	x13, x14, x13
 a2c:	dsb	ish
 a30:	isb
 a34:	mrs	x14, s3_2_c15_c0_0
 a38:	isb
 a3c:	add	x12, x13, x12
 a40:	add	x12, x12, x14
 a44:	sub	x12, x12, #0x41
 a48:	str	x12, [x24, x8]
 a4c:	add	x8, x8, #0x8
 a50:	cmp	x8, #0x320
 a54:	b.ne	9f0 <main+0x15c>  // b.any
 a58:	sub	x25, sp, #0x320
 a5c:	mov	sp, x25
 a60:	mov	x8, xzr
 a64:	mov	w9, #0x41                  	// #65
 a68:	add	x10, x19, #0x0
 a6c:	add	x11, x19, #0x4
 a70:	strb	w9, [x19, #4]
 a74:	dc	civac, x10
 a78:	isb
 a7c:	dsb	ish
 a80:	dc	civac, x11
 a84:	isb
 a88:	dsb	ish
 a8c:	isb
 a90:	mrs	x12, s3_2_c15_c0_0
 a94:	isb
 a98:	ldrb	w13, [x19]
 a9c:	eor	x13, x13, x13
 aa0:	ldrb	w14, [x13, x11]
 aa4:	sub	x12, x13, x12
 aa8:	dsb	ish
 aac:	isb
 ab0:	mrs	x13, s3_2_c15_c0_0
 ab4:	isb
 ab8:	add	x12, x12, x14
 abc:	add	x12, x12, x13
 ac0:	sub	x12, x12, #0x41
 ac4:	str	x12, [x25, x8]
 ac8:	add	x8, x8, #0x8
 acc:	cmp	x8, #0x320
 ad0:	b.ne	a70 <main+0x1dc>  // b.any
 ad4:	adrp	x0, 0 <__abi_tag-0x278>
 ad8:	add	x0, x0, #0xc2c
 adc:	bl	760 <printf@plt>
 ae0:	mov	x26, xzr
 ae4:	add	x27, x19, #0x8
 ae8:	adrp	x20, 0 <__abi_tag-0x278>
 aec:	add	x20, x20, #0xc33
 af0:	ldr	x1, [x27, x26]
 af4:	mov	x0, x20
 af8:	bl	760 <printf@plt>
 afc:	add	x26, x26, #0x8
 b00:	cmp	x26, #0x320
 b04:	b.ne	af0 <main+0x25c>  // b.any
 b08:	adrp	x0, 0 <__abi_tag-0x278>
 b0c:	add	x0, x0, #0xc38
 b10:	bl	760 <printf@plt>
 b14:	mov	x26, xzr
 b18:	adrp	x20, 0 <__abi_tag-0x278>
 b1c:	add	x20, x20, #0xc33
 b20:	ldr	x1, [x22, x26]
 b24:	mov	x0, x20
 b28:	bl	760 <printf@plt>
 b2c:	add	x26, x26, #0x8
 b30:	cmp	x26, #0x320
 b34:	b.ne	b20 <main+0x28c>  // b.any
 b38:	adrp	x0, 0 <__abi_tag-0x278>
 b3c:	add	x0, x0, #0xc43
 b40:	bl	760 <printf@plt>
 b44:	mov	x22, xzr
 b48:	adrp	x20, 0 <__abi_tag-0x278>
 b4c:	add	x20, x20, #0xc33
 b50:	ldr	x1, [x23, x22]
 b54:	mov	x0, x20
 b58:	bl	760 <printf@plt>
 b5c:	add	x22, x22, #0x8
 b60:	cmp	x22, #0x320
 b64:	b.ne	b50 <main+0x2bc>  // b.any
 b68:	adrp	x0, 0 <__abi_tag-0x278>
 b6c:	add	x0, x0, #0xc59
 b70:	bl	760 <printf@plt>
 b74:	mov	x22, xzr
 b78:	adrp	x20, 0 <__abi_tag-0x278>
 b7c:	add	x20, x20, #0xc33
 b80:	ldr	x1, [x24, x22]
 b84:	mov	x0, x20
 b88:	bl	760 <printf@plt>
 b8c:	add	x22, x22, #0x8
 b90:	cmp	x22, #0x320
 b94:	b.ne	b80 <main+0x2ec>  // b.any
 b98:	adrp	x0, 0 <__abi_tag-0x278>
 b9c:	add	x0, x0, #0xc6e
 ba0:	bl	760 <printf@plt>
 ba4:	mov	x22, xzr
 ba8:	adrp	x20, 0 <__abi_tag-0x278>
 bac:	add	x20, x20, #0xc33
 bb0:	ldr	x1, [x25, x22]
 bb4:	mov	x0, x20
 bb8:	bl	760 <printf@plt>
 bbc:	add	x22, x22, #0x8
 bc0:	cmp	x22, #0x320
 bc4:	b.ne	bb0 <main+0x31c>  // b.any
 bc8:	mov	w0, #0xa                   	// #10
 bcc:	bl	770 <putchar@plt>
 bd0:	mov	sp, x21
 bd4:	adrp	x8, 11000 <__FRAME_END__+0x1025c>
 bd8:	ldr	x8, [x8, #4048]
 bdc:	ldur	x9, [x29, #-8]
 be0:	ldr	x8, [x8]
 be4:	cmp	x8, x9
 be8:	b.ne	c10 <main+0x37c>  // b.any
 bec:	mov	w0, wzr
 bf0:	mov	sp, x29
 bf4:	ldp	x20, x19, [sp, #80]
 bf8:	ldp	x22, x21, [sp, #64]
 bfc:	ldp	x24, x23, [sp, #48]
 c00:	ldp	x26, x25, [sp, #32]
 c04:	ldp	x28, x27, [sp, #16]
 c08:	ldp	x29, x30, [sp], #96
 c0c:	ret
 c10:	bl	730 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000000c14 <_fini>:
 c14:	nop
 c18:	stp	x29, x30, [sp, #-16]!
 c1c:	mov	x29, sp
 c20:	ldp	x29, x30, [sp], #16
 c24:	ret
